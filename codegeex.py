"""
This module contains the code for the code generation model codegeex.
"""

import requests
from f import get_samples

from human_eval.data import write_jsonl

NUM_SAMPLES_PER_TASK = 102


def codegeex_api(prompt: str) -> str:
    """
    The _get_code_from_api function takes a prompt as input and returns the generated code.
    The prompt is a string of text that will be used to generate code. The function
    returns the generated code as a string.

    :param prompt: Generate a code snippet
    :return: The code generated by the model
    """

    payload = {
        # "lang": "Python",
        "prompt": prompt,
        "n": 1,
        "apikey": "68cf004321e94b47a91c2e45a8109852",
        "apisecret": "e82b86a16f9d471ab215f653060310e3",
        "temperature": 0.8,
        "top_p": 1,
        "top_k": 0,
    }

    response = requests.post(
        "https://tianqi.aminer.cn/api/v2/multilingual_code_generate_adapt",
        json=payload,
        timeout=30,
    )

    response = response.json()
    print(response)
    code = response["result"]["output"]["code"][0]
    print(code)
    return code


def main() -> None:
    """
    This function is the main function for the code generation model codegeex.
    """
    samples = get_samples(
        num_samples_per_task=NUM_SAMPLES_PER_TASK, _get_code_from_api=codegeex_api
    )
    print(samples)
    write_jsonl("cg"+random.random()+ ".jsonl", samples)


if __name__ == "__main__":
    main()
